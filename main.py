import telebot
from telebot import types
import Token

bot = telebot.TeleBot(Token.TOKEN)
keys = ("–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è", "–ü—Ä–∞–≤–∏–ª–∞", "–ü—Ä–æ–µ–∫—Ç—ã", "–ù–∞–∑–∞–¥")
projectsKeys = ("–ü—Ä–æ—Å—Ç—ã–µ", "–°—Ä–µ–¥–Ω–∏–µ", "–°–ª–æ–∂–Ω—ã–µ")
ProjectsLow = ("–ö–æ–º–ø–∏–ª—è—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞", "Hello World", "–°–ø–∏—Å–∫–∏, –∫–∞—Ä—Ç–µ–∂–∏ –∏ —Å–ª–æ–≤–∞—Ä–∏")
ProjectsMednum = ("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä", "–ú–∏–Ω–∏ –∏–≥—Ä–∞ —É–≥–∞–¥–∞–π, '—á—Ç–æ —è –∑–∞–≥–∞–¥–∞–ª?'")
ProjectsHard = ("–ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏", "–ü—Ä–æ–µ–∫—Ç –Ω–∞ Android")

@bot.message_handler(commands=['start'])
def start(massage):
	mp = types.ReplyKeyboardMarkup(resize_keyboard=True)
	hello = types.KeyboardButton("–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
	projects = types.KeyboardButton("–ü—Ä–æ–µ–∫—Ç—ã")
	mp.add(hello,projects)
	welcome = f"–î–æ–±—Ä–æ –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å, {massage.from_user.first_name}!"
	bot.send_message(massage.chat.id, welcome, parse_mode='html', reply_markup=mp)

@bot.message_handler()
def massage_reader(massage):
	if(massage.text in keys):
		if massage.text == "–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è":
			bot.send_message(massage.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {massage.from_user.first_name}\n\n—ç—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ –Ω–∞ —è–∑—ã–∫–µ Rust!\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –æ Rust, —É–∑–Ω–∞—Ç—å –æ –ø—Ä–æ–µ–∫—Ç–∞—Ö –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!\n\n–ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–æ—á–∫–∏ —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º")
		elif massage.text == "–ü—Ä–æ–µ–∫—Ç—ã":
			mp = types.ReplyKeyboardMarkup(resize_keyboard=True)
			Low = types.KeyboardButton(projectsKeys[0])
			Mednum = types.KeyboardButton(projectsKeys[1])
			Hard = types.KeyboardButton(projectsKeys[2])
			Back = types.KeyboardButton("–ù–∞–∑–∞–¥")
			mp.add(Low, Mednum, Hard, Back)
			text = f"–í—ã–±–µ—Ä–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å"
			bot.send_message(massage.chat.id, text, reply_markup=mp)
		elif massage.text == "–ù–∞–∑–∞–¥":
			mp = types.ReplyKeyboardMarkup(resize_keyboard=True)
			hello = types.KeyboardButton("–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
			projects = types.KeyboardButton("–ü—Ä–æ–µ–∫—Ç—ã")
			mp.add(hello,projects)
			bot.send_message(massage.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥", parse_mode='html', reply_markup=mp)
	elif(massage.text in projectsKeys):
		if(massage.text == projectsKeys[0]):
			mpProjectLow = types.ReplyKeyboardMarkup(resize_keyboard=True)
			Compilation = types.KeyboardButton(ProjectsLow[0])
			Hello_World = types.KeyboardButton(ProjectsLow[1])
			Lists = types.KeyboardButton(ProjectsLow[2])
			Back = types.KeyboardButton("–ù–∞–∑–∞–¥")
			mpProjectLow.add(Compilation, Hello_World, Lists, Back)
			bot.send_message(massage.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç", parse_mode='html', reply_markup=mpProjectLow)
		elif(massage.text == projectsKeys[1]):
			mpProjectMednum = types.ReplyKeyboardMarkup(resize_keyboard=True)
			Calculator = types.KeyboardButton(ProjectsMednum[0])
			MiniGame = types.KeyboardButton(ProjectsMednum[1])
			Back = types.KeyboardButton("–ù–∞–∑–∞–¥")
			mpProjectMednum.add(Calculator, MiniGame, Back)
			bot.send_message(massage.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç", parse_mode='html', reply_markup=mpProjectMednum)
		elif(massage.text == projectsKeys[2]):
			mpProjectHard = types.ReplyKeyboardMarkup(resize_keyboard=True)
			TicTacToe = types.KeyboardButton(ProjectsHard[0])
			OnAndroid = types.KeyboardButton(ProjectsHard[1])
			Back = types.KeyboardButton("–ù–∞–∑–∞–¥")
			mpProjectHard.add(TicTacToe, OnAndroid, Back)
			bot.send_message(massage.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç", parse_mode='html', reply_markup=mpProjectHard)
	elif(massage.text in ProjectsLow):
		if(massage.text == ProjectsLow[0]):
			bot.send_message(massage.chat.id, "–ö–æ–º–ø–∏–ª—è—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞:\n\n```bash\nrustc —Ñ–∞–π–ª.rs\n```\n –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .exe\n\n(Linux)\n```bash\n./–Ω–∞–∑–≤–∞–Ω–∏–µ_—Ñ–∞–π–ª–∞\n```\n(Windows)\n```bash\n–Ω–∞–∑–≤–∞–Ω–∏–µ_—Ñ–∞–π–ª–∞.exe\n```\n\n–°–∫–∞—á–∞—Ç—å –ø–æ–ª–Ω—ã–π Rust –¥–ª—è Linux:\nhttps://static.rust-lang.org/dist/rust-1.77.2-x86_64-unknown-linux-gnu.tar.xz", parse_mode="markdown")
		if(massage.text == ProjectsLow[1]):
			bot.send_message(massage.chat.id, "–°–∞–º–∞—è –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ —è–∑—ã–∫–µ Rust:\n\n```rust\nfn main() {\n    println!(\"Hello World\");\n}\n```", parse_mode="markdown")
		elif(massage.text == ProjectsLow[2]):
			bot.send_message(massage.chat.id, "–ë–∞–∑–æ–≤—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ Rust:\n\n–°–ø–∏—Å–∫–∏ (lists)\n```rust\nlet list = [1, 2, 3, 4, 5];\nprintln!(\"{:?}\", list);\n```\n–ö–æ—Ä—Ç–µ–∂–∏ (tuples)(–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Å–ø–∏—Å–∫–æ–≤, –∫–æ—Ä—Ç–µ–∂–∏ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã)\n```rust\nlet tuple = (1, 2, 3, 4, 5);\nprintln!(\"{:?}\", tuple);\n```\n–°–ª–æ–≤–∞—Ä–∏ (dictionaries)\n```rust\nlet dictionary = {\"key1\": \"value1\", \"key2\": \"value2\", \"key3\": \"value3\"};\nprintln!(\"{:?}\", dictionary);\n```", parse_mode="markdown")
	elif(massage.text in ProjectsMednum):
		if(massage.text == ProjectsMednum[0]):
			bot.send_message(massage.chat.id, "–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –≤–≤–æ–¥–æ–º –Ω–∞ Rust:\n\n```rust\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).expect(\"Failed to read line\");\n    let input: u32 = input.trim().parse().expect(\"Please enter a valid number\");\n    println!(\"You entered: {}\", input);\n}\n```", parse_mode="markdown")
		elif(massage.text == ProjectsMednum[1]):
			bot.send_message(massage.chat.id, "–ú–∏–Ω–∏ –∏–≥—Ä–∞ —É–≥–∞–¥–∞–π, '—á—Ç–æ —è –∑–∞–≥–∞–¥–∞–ª?' —Å –≤–≤–æ–¥–æ–º –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Å–æ–ª—å –Ω–∞ Rust:\n\n```rust\nuse rand::Rng;\n\nfn main() {\n    println!(\"–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10, —É–≥–∞–¥–∞–π\");\n    let secret_number = rand::thread_rng().gen_range(1..=100);\n    println!(\"–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ: {}\", secret_number);\n}\n```", parse_mode="markdown")
	elif(massage.text in ProjectsHard):
		if(massage.text == ProjectsHard[0]):
			bot.send_message(massage.chat.id, "–°–∞–º —É—á–∏!üò†")
		elif(massage.text == ProjectsHard[1]):
			bot.send_message(massage.chat.id, "–°–∞–º —É—á–∏!üò†")
	else:
		bot.send_message(massage.chat.id, f"üò†{massage.from_user.first_name}, –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–æ—á–∫–∏")
	print(massage.text)

while True:
	bot.polling()