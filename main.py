import telebot
from telebot import types
import Token

bot = telebot.TeleBot(Token.TOKEN)
keys = ("–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è", "–ü—Ä–∞–≤–∏–ª–∞", "–ü—Ä–æ–µ–∫—Ç—ã", "–ù–∞–∑–∞–¥")
projectsKeys = ("–ü—Ä–æ—Å—Ç—ã–µ", "–°—Ä–µ–¥–Ω–∏–µ", "–°–ª–æ–∂–Ω—ã–µ")
ProjectsLow = ("Hello World", "–°–ø–∏—Å–∫–∏, –∫–∞—Ä—Ç–µ–∂–∏ –∏ —Å–ª–æ–≤–∞—Ä–∏", "–ú–∏–Ω–∏ –∏–≥—Ä–∞ —É–≥–∞–¥–∞–π, '—á—Ç–æ —è –∑–∞–≥–∞–¥–∞–ª?'")
ProjectsMednum = ("–¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç", "–ö–æ–º–ø–∏–ª—è—Ü–∏—è –≤ Python", "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –Ø–ü")
ProjectsHard = ("–ò–≥—Ä–∞ –Ω–∞ PyGame", "–°–∞–π—Ç —Å Django", "Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ Python")

@bot.message_handler(commands=['start'])
def start(massage):
	mp = types.ReplyKeyboardMarkup(resize_keyboard=True)
	hello = types.KeyboardButton("–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
	projects = types.KeyboardButton("–ü—Ä–æ–µ–∫—Ç—ã")
	guide = types.KeyboardButton("–ü—Ä–∞–≤–∏–ª–∞")
	mp.add(hello,projects, guide)
	welcome = f"–î–æ–±—Ä–æ –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å, {massage.from_user.first_name}!"
	bot.send_message(massage.chat.id, welcome, parse_mode='html', reply_markup=mp)

@bot.message_handler()
def massage_reader(massage):
	if(massage.text in keys):
		if massage.text == "–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è":
			bot.send_message(massage.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {massage.from_user.first_name}\n\n—ç—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ –Ω–∞ —è–∑—ã–∫–µ Python!")
		elif massage.text == "–ü—Ä–∞–≤–∏–ª–∞":
			bot.send_message(massage.chat.id, f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–æ—á–∫–∏ —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º")
		elif massage.text == "–ü—Ä–æ–µ–∫—Ç—ã":
			mp = types.ReplyKeyboardMarkup(resize_keyboard=True)
			Low = types.KeyboardButton(projectsKeys[0])
			Mednum = types.KeyboardButton(projectsKeys[1])
			Hard = types.KeyboardButton(projectsKeys[2])
			Back = types.KeyboardButton("–ù–∞–∑–∞–¥")
			mp.add(Low, Mednum, Hard, Back)
			text = f"–í—ã–±–µ—Ä–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å"
			bot.send_message(massage.chat.id, text, reply_markup=mp)
		elif massage.text == "–ù–∞–∑–∞–¥":
			mp = types.ReplyKeyboardMarkup(resize_keyboard=True)
			hello = types.KeyboardButton("–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
			projects = types.KeyboardButton("–ü—Ä–æ–µ–∫—Ç—ã")
			guide = types.KeyboardButton("–ü—Ä–∞–≤–∏–ª–∞")
			mp.add(hello,projects, guide)
			bot.send_message(massage.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥", parse_mode='html', reply_markup=mp)
	elif(massage.text in projectsKeys):
		if(massage.text == projectsKeys[0]):
			mpProjectLow = types.ReplyKeyboardMarkup(resize_keyboard=True)
			Hello_World = types.KeyboardButton(ProjectsLow[0])
			List = types.KeyboardButton(ProjectsLow[1])
			Guess = types.KeyboardButton(ProjectsLow[2])
			Back = types.KeyboardButton("–ù–∞–∑–∞–¥")
			mpProjectLow.add(Hello_World, List, Guess, Back)
			bot.send_message(massage.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç", parse_mode='html', reply_markup=mpProjectLow)
		elif(massage.text == projectsKeys[1]):
			mpProjectMednum = types.ReplyKeyboardMarkup(resize_keyboard=True)
			Telegram = types.KeyboardButton(ProjectsMednum[0])
			Compilation = types.KeyboardButton(ProjectsMednum[1])
			Other_languages = types.KeyboardButton(ProjectsMednum[2])
			Back = types.KeyboardButton("–ù–∞–∑–∞–¥")
			mpProjectMednum.add(Telegram, Compilation, Other_languages, Back)
			bot.send_message(massage.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç", parse_mode='html', reply_markup=mpProjectMednum)
		elif(massage.text == projectsKeys[2]):
			mpProjectHard = types.ReplyKeyboardMarkup(resize_keyboard=True)
			Pygame = types.KeyboardButton(ProjectsHard[0])
			Django = types.KeyboardButton(ProjectsHard[1])
			Android = types.KeyboardButton(ProjectsHard[2])
			Back = types.KeyboardButton("–ù–∞–∑–∞–¥")
			mpProjectHard.add(Pygame, Django, Android, Back)
			bot.send_message(massage.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç", parse_mode='html', reply_markup=mpProjectHard)
	elif(massage.text in ProjectsLow):
		if(massage.text == ProjectsLow[0]):
			bot.send_message(massage.chat.id, "–°–∞–º–∞—è –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ —è–∑—ã–∫–µ Python:\n\n```python\nprint('Hello World')```", parse_mode="markdown")
		elif(massage.text == ProjectsLow[1]):
			bot.send_message(massage.chat.id, "–ë–∞–∑–æ–≤—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ Python:\n\n–°–ø–∏—Å–∫–∏ (lists)\n```python\nlist = [1, 2, 3, 4, 5]\nprint(list)\n```\n–ö–æ—Ä—Ç–µ–∂–∏ (tuples)(–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Å–ø–∏—Å–∫–æ–≤, –∫–æ—Ä—Ç–µ–∂–∏ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã)\n```python\ntuple = (1, 2, 3, 4, 5)\nprint(tuple)\n```\n–°–ª–æ–≤–∞—Ä–∏ (dictionaries)\n```python\ndictionary = {'key1': 'value1', 'key2': 'value2', 'key3': 'value3'}\nprint(dictionary)\n```", parse_mode="markdown")
		elif(massage.text == ProjectsLow[2]):
			bot.send_message(massage.chat.id, "–ú–∏–Ω–∏ –∏–≥—Ä–∞ —É–≥–∞–¥–∞–π, '—á—Ç–æ —è –∑–∞–≥–∞–¥–∞–ª?'\n\n```python\nimport random\n\ndef main():\n	# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10\n    number = random.randint(1, 10)\n\n    # –î–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ç—Ä–∏ –ø–æ–ø—ã—Ç–∫–∏ —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ\n    for i in range(3):\n        user_number = int(input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))\n        if user_number == number:\n            print('–¢—ã –≤—ã–π–≥—Ä–∞–ª!')\n            break\n        else:\n            print(f'–ù–µ–≤–µ—Ä–Ω–æ, —É —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å {3 - i - 1} –ø–æ–ø—ã—Ç–æ–∫')\n\nif __name__ == '__main__':\n    main()\n```", parse_mode="markdown")
	elif(massage.text in ProjectsMednum):
		if(massage.text == ProjectsMednum[0]):
			bot.send_message(massage.chat.id, "–ö–æ–¥ –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞:\n\n```python\nimport telebot\n\nTOKEN = '–¢–æ–∫–µ–Ω_–∏–∑_Bot_Father'\n\nbot = telebot.TeleBot(TOKEN)\n\n@bot.message_handler(commands=['start'])\ndef start(massage):\n    bot.send_message(massage.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç!')\n\nif __name__ == '__main__':\n    bot.polling()\n```", parse_mode="markdown")
		if(massage.text == ProjectsMednum[1]):
			bot.send_message(massage.chat.id, "–ö–æ–º–ø–∏–ª—è—Ü–∏—è –≤ Python —á–µ—Ä–µ–∑ pyinstaller:\n(Linux)\n```bash\npyinstaller -F –∏–º—è_—Ñ–∞–π–ª–∞.py\n```\n(Windows)\n```bash\npyinstaller -F –∏–º—è_—Ñ–∞–π–ª–∞.py\n```\n–ì–¥–µ `–∏–º—è_—Ñ–∞–π–ª–∞.py` - —ç—Ç–æ –∏–º—è —Ñ–∞–π–ª–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å,\n\n-F - —ç—Ç–æ —Ñ–ª–∞–≥ –∫–æ—Ç–æ—Ä—ã–π –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º —á—Ç–æ –º—ã —Ö–æ—Ç–∏–º —Å–æ–∑–¥–∞—Ç—å –æ–¥–∏–Ω —Ñ–∞–π–ª\n\n–∏–ª–∏ —á–µ—Ä–µ–∑ auto-py-to-exe(–µ–≥–æ –Ω–∞–¥–æ —Ç–æ–ª—å–∫–æ —Å–∫–∞—á–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å)", parse_mode="markdown")
		if(massage.text == ProjectsMednum[2]):
			bot.send_message(massage.chat.id, "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –Ø–ü(–ù–∞ –ø—Ä–∏–º–µ—Ä C++ –Ω–∞ Windows):\n\n–ü–∏—à–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –Ω–∞ C++:\n```cpp\n#include <iostream>\nusing namespace std;\n\nvoid printHello() {\n    cout << \"Hello C++\" << \"\\n\"\n}```\n–ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º:```bash\ng++ –Ω–∞–∑–≤–∞–Ω–∏–µ_—Ñ–∞–π–ª–∞_C++ -o –Ω–∞–∑–≤–∞–Ω–∏–µ_–¥–ª—è_–±–∏–±–ª–µ–æ—Ç–µ–∫–∏.dll```\n\n–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –≤ Python:\n```python\nimport ctypes\nlib = ctypes.CDLL('–Ω–∞–∑–≤—ã–Ω–∏–µ_–±–∏–±–ª–∏–æ—Ç–µ–∫–∏_C++.dll')\nlib.printHello()\n```", parse_mode="markdown")
	elif(massage.text in ProjectsHard):
		if(massage.text == ProjectsHard[0]):
			bot.send_message(massage.chat.id, "")
		if(massage.text == ProjectsHard[1]):
			bot.send_message(massage.chat.id, "")
		if(massage.text == ProjectsHard[2]):
			bot.send_message(massage.chat.id, "")
	else:
		bot.send_message(massage.chat.id, f"üò†{massage.from_user.first_name}, –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–æ—á–∫–∏")
	print(massage.text)

while True:
	bot.polling()